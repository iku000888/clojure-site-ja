# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Japan Clojurians
# This file is distributed under the same license as the clojure-site-ja package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: clojure-site-ja 0.0.1\n"
"POT-Creation-Date: 2018-04-02 07:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: en/content/news/2018/01/05/git-deps.adoc:1
#, no-wrap
msgid "Git Deps for Clojure"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:4
msgid "Rich Hickey 2018-01-05"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:9
msgid ""
"Clojure was designed to empower developers by enabling them to leverage "
"existing libraries. When Clojure was first released, this manifest itself in "
"strong interop support for Java. Eventually tooling (Leiningen et al) arose "
"around procuring Java libs from the Maven ecosystem, and Clojure, its "
"contribs, and the community also adopted the Maven approach to _delivering_ "
"libraries via artifacts hosted in well known repositories like Maven Central "
"and Clojars."
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:11
msgid ""
"There were many benefits to this, but, like most things in programming, "
"there were attendant costs. Artifact based releases predate the widespread "
"adoption of content-based addressing systems like Git. Without content-based "
"addressing, they depend on conventions of release naming and weak notions "
"like semantic versioning. They also reflect the nature of languages like "
"Java and C that require a build step prior to execution. Most Clojure "
"libraries do not."
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:13
msgid ""
"The modern reality of Clojure development is that (mostly) we use Git, we "
"use centralized Git repos like Github, Bitbucket et al, and code is "
"executable. Producing and consuming artifacts creates a lot of unnecessary "
"friction between creating code and using it. Let's get rid of it when not "
"needed!"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:15
msgid ""
"Today we're happy to announce the availability of git deps support in "
"Clojure tools. It leverages the fact that tools.deps does not use the Maven "
"dependency resolver but instead resolves dependencies on its own. This "
"decouples dependency resolution and classpath creation from any single "
"library publishing/procurement mechanism. Git repos become a source of "
"libraries directly."
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:17
msgid ""
"You can now specify git coordinates (in addition to mvn and local) in deps."
"edn:"
msgstr ""

#. type: delimited block -
#: en/content/news/2018/01/05/git-deps.adoc:23
#, no-wrap
msgid ""
"{:deps \n"
" {org.clojure/data.csv {:git/url \"https://github.com/clojure/data.csv.git\"\n"
"                        :sha \"e5beccad0bafdb8e78f19cba481d4ecef5fabf36\"}}}\n"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:26
msgid "The tools support (available as a library in tools.gitlibs) will:"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:28
msgid ""
"securely log into the git repository host and clone the repo (if needed)"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:29
msgid ""
"checkout and cache (per library+sha) the specified working tree (if needed)"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:30
msgid ""
"resolve transitive deps and incorporate the cached directory into the "
"classpath"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:32
msgid ""
"Of course, not every commit is stable, so one can designate stable points "
"using tags."
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:34
msgid ""
"This greatly reduces the ceremony and tooling required to share and consume "
"libraries, facilitates parallel development of sibling libraries, testing, "
"speculative forks etc. and fosters a greater connection to source truth "
"while preserving the secure centralized hosting, stable repeatability and "
"caching one gets from e.g. Maven."
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:36
msgid ""
"I am hopeful this git support will usher in a new level of agility for "
"Clojure development. Many thanks to Alex Miller for his tireless efforts to "
"convert these ideas into a working system."
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:38
msgid "For more information see:"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:40
msgid ""
"<<xref/../../../../../guides/getting_started#,Getting Started>> - to install "
"or update the Clojure tools"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:41
msgid ""
"<<xref/../../../../../guides/deps_and_cli#,Deps and CLI Guide>> - on how to "
"use the Clojure tools"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:42
msgid ""
"<<xref/../../../../../reference/deps_and_cli#,Deps and CLI Reference>> - "
"complete reference info"
msgstr ""

#. type: Plain text
#: en/content/news/2018/01/05/git-deps.adoc:42
msgid ""
"https://www.youtube.com/watch?v=oyLBGkS5ICk[Spec-ulation] keynote - on "
"growth versus breakage"
msgstr ""
